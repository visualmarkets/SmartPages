packrat::on()
packrat::on()
install.packages("../a638c78b2ab239218513eb9ec8ac3c7246e2689f.tar.gz", type = 'source', repos = NULL)
install.packages("../a638c78b2ab239218513eb9ec8ac3c7246e2689f.tar.gz", type = 'source', repos = NULL)
rmarkdown::render_site()
old.packages()
update.packages(ask = F)
rmarkdown::render_site()
knitr::opts_chunk$set(echo = TRUE)
library(highcharter)
library(lorem)
source("ChartStyle.R")
# sample(c(1:100), 3) %>% lipsum::lipsum[.]
data(diamonds, economics_long, mpg, package = "ggplot2")
library(dplyr)
hchart(mpg, "scatter", hcaes(x = displ, y = hwy, group = class)) %>%
hc_title(text = "Scott this is a random scatter plot.", align = 'left') %>%
hc_subtitle(text = "Sources: Cerulli Associates & Pickering Associates",
align = 'left') %>%
hc_exporting(enabled = TRUE) %>%
hc_add_theme(caTheme)
data(diamonds, economics_long, mpg, package = "ggplot2")
library(dplyr)
hchart(mpg, "scatter", hcaes(x = displ, y = hwy, group = class)) %>%
hc_title(text = "Scott this is a random scatter plot.", align = 'left') %>%
hc_subtitle(text = "Sources: Cerulli Associates & Pickering Associates",
align = 'left') %>%
hc_exporting(enabled = TRUE) %>%
hc_add_theme(caTheme)
data(diamonds, economics_long, mpg, package = "ggplot2")
library(dplyr)
hchart(mpg, "scatter", hcaes(x = displ, y = hwy, group = class)) %>%
hc_title(text = "Scott this is a random scatter plot.", align = 'left') %>%
hc_subtitle(text = "Sources: Cerulli Associates & Pickering Associates",
align = 'left') %>%
hc_exporting(enabled = TRUE) %>%
hc_add_theme(caTheme)
mutate_mapping <- function(data, mapping, drop = FALSE) {
stopifnot(is.data.frame(data), inherits(mapping, "hcaes"), inherits(drop, "logical"))
# http://rmhogervorst.nl/cleancode/blog/2016/06/13/NSE_standard_evaluation_dplyr.html
tran <- as.character(mapping)
newv <- names(mapping)
data <- dplyr::mutate_(data, .dots = setNames(tran, newv))
# Reserverd  highcharts names (#241)
if(has_name(data, "series"))
data <- rename_(data, "seriess" = "series")
if(drop)
data <- select_(data, .dots = names(mapping))
data
}
data(diamonds, economics_long, mpg, package = "ggplot2")
library(dplyr)
hchart(mpg, "scatter", hcaes(x = displ, y = hwy, group = class)) %>%
hc_title(text = "Scott this is a random scatter plot.", align = 'left') %>%
hc_subtitle(text = "Sources: Cerulli Associates & Pickering Associates",
align = 'left') %>%
hc_exporting(enabled = TRUE) %>%
hc_add_theme(caTheme)
data(diamonds, economics_long, mpg, package = "ggplot2")
library(dplyr)
hchart(mpg, "scatter", hcaes(x = displ, y = hwy, group = class)) %>%
hc_title(text = "Scott this is a random scatter plot.", align = 'left') %>%
hc_subtitle(text = "Sources: Cerulli Associates & Pickering Associates",
align = 'left') %>%
hc_exporting(enabled = TRUE) %>%
hc_add_theme(caTheme)
knitr::opts_chunk$set(echo = TRUE)
library(highcharter)
library(lorem)
source("ChartStyle.R")
# sample(c(1:100), 3) %>% lipsum::lipsum[.]
data(diamonds, economics_long, mpg, package = "ggplot2")
library(dplyr)
hchart(mpg, "scatter", hcaes(x = displ, y = hwy, group = class)) %>%
hc_title(text = "Scott this is a random scatter plot.", align = 'left') %>%
hc_subtitle(text = "Sources: Cerulli Associates & Pickering Associates",
align = 'left') %>%
hc_exporting(enabled = TRUE) %>%
hc_add_theme(caTheme)
hchart(diamonds$price, name = "Price") %>%
hc_title(text = "Scott you can zoom on this plot!", align = 'left') %>%
hc_subtitle(text = "Sources: Cerulli Associates & Pickering Associates",
align = 'left') %>%
hc_exporting(enabled = TRUE) %>%
hc_add_theme(caTheme)
library(DT)
datatable(
iris,
extensions = 'Buttons', options = list(
dom = 'Bfrtip',
buttons =
list('copy', 'print', list(
extend = 'collection',
buttons = c('csv', 'excel', 'pdf'),
text = 'Download'
))
)
)
rmarkdown::render_site()
knitr::opts_chunk$set(echo = TRUE)
library(devtools)
library(lorem)
library(dplyr)
library(quantmod)
library(DT)
source("ChartStyle.R")
rmarkdown::render_stire()
rmarkdown::render_stie()
rmarkdown::render_site()
q()
sessionInfo()
rmarkdown::render_site()
data(economics_long)
rmarkdown::render_site()
update.packages(ask=F)
rmarkdown::render_site()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(lorem)
library(highcharter)
source("ChartStyle.R")
# sample(c(1:100), 3) %>% lipsum::lipsum[.]
data(diamonds, economics_long, mpg, package = "ggplot2")
library(highcharter)
hchart(mpg, "scatter", hcaes(x = displ, y = hwy, group = class)) %>%
hc_title(text = "Scott this is a random scatter plot.", align = 'left') %>%
hc_subtitle(text = "Sources: Cerulli Associates & Pickering Associates",
align = 'left') %>%
hc_exporting(enabled = TRUE) %>%
hc_add_theme(caTheme)
hcaes
hcaes(x = displ, y = hwy, group = class)
hchart(mpg, "scatter", hcaes(x = displ, y = hwy, group = class))
rmarkdown::render_site()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lorem)
library(highcharter)
library(ggplot2)
source("ChartStyle.R")
# sample(c(1:100), 3) %>% lipsum::lipsum[.]
data(diamonds, economics_long, mpg, package = "ggplot2")
library(highcharter)
hchart(mpg, "scatter", hcaes(x = displ, y = hwy, group = class)) %>%
hc_title(text = "Scott this is a random scatter plot.", align = 'left') %>%
hc_subtitle(text = "Sources: Cerulli Associates & Pickering Associates",
align = 'left') %>%
hc_exporting(enabled = TRUE) %>%
hc_add_theme(caTheme)
old.packages()
update.packages(ask=F)
old.packages()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lorem)
library(highcharter)
library(ggplot2)
source("ChartStyle.R")
# sample(c(1:100), 3) %>% lipsum::lipsum[.]
data(diamonds, economics_long, mpg, package = "ggplot2")
library(highcharter)
# hchart(mpg, "scatter", hcaes(x = displ, y = hwy, group = class))
highchart() %>%
hc_title(text = "Scott this is a random scatter plot.", align = 'left') %>%
hc_subtitle(text = "Sources: Cerulli Associates & Pickering Associates",
align = 'left') %>%
hc_exporting(enabled = TRUE) %>%
hc_add_theme(caTheme)
data(diamonds, economics_long, mpg, package = "ggplot2")
library(highcharter)
hchart(mpg, "scatter", hcaes(x = displ, y = hwy, group = class))
data(diamonds, economics_long, mpg, package = "ggplot2")
library(highcharter)
hchart(mpg, "scatter", hcaes(x = displ, y = hwy, group = class)) %>%
# highchart() %>%
hc_title(text = "Scott this is a random scatter plot.", align = 'left') %>%
hc_subtitle(text = "Sources: Cerulli Associates & Pickering Associates",
align = 'left') %>%
hc_exporting(enabled = TRUE) %>%
hc_add_theme(caTheme)
hcaes
.rs.restartR()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lorem)
library(highcharter)
# library(ggplot2)
source("ChartStyle.R")
# sample(c(1:100), 3) %>% lipsum::lipsum[.]
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lorem)
library(highcharter)
# library(ggplot2)
source("ChartStyle.R")
# sample(c(1:100), 3) %>% lipsum::lipsum[.]
data(diamonds, economics_long, mpg, package = "ggplot2")
hchart(mpg, "scatter", hcaes(x = displ, y = hwy, group = class)) %>%
# highchart() %>%
hc_title(text = "Scott this is a random scatter plot.", align = 'left') %>%
hc_subtitle(text = "Sources: Cerulli Associates & Pickering Associates",
align = 'left') %>%
hc_exporting(enabled = TRUE) %>%
hc_add_theme(caTheme)
knitr::opts_chunk$set(echo = TRUE)
# library(tidyverse)
library(lorem)
library(highcharter)
# library(ggplot2)
source("ChartStyle.R")
# sample(c(1:100), 3) %>% lipsum::lipsum[.]
data(diamonds, economics_long, mpg, package = "ggplot2")
hchart(mpg, "scatter", hcaes(x = displ, y = hwy, group = class)) %>%
# highchart() %>%
hc_title(text = "Scott this is a random scatter plot.", align = 'left') %>%
hc_subtitle(text = "Sources: Cerulli Associates & Pickering Associates",
align = 'left') %>%
hc_exporting(enabled = TRUE) %>%
hc_add_theme(caTheme)
data(diamonds, economics_long, mpg, package = "ggplot2")
hchart(mpg, "scatter", hcaes(x = displ, y = hwy, group = class)) %>%
# highchart() %>%
hc_title(text = "Scott this is a random scatter plot.", align = 'left') %>%
hc_subtitle(text = "Sources: Cerulli Associates & Pickering Associates",
align = 'left') %>%
hc_exporting(enabled = TRUE) %>%
hc_add_theme(caTheme)
data(diamonds, economics_long, mpg, package = "ggplot2")
hchart(mpg, "scatter", hcaes(x = displ, y = hwy, group = class)) %>%
hc_title(text = "Scott this is a random scatter plot.", align = 'left') %>%
hc_subtitle(text = "Sources: Cerulli Associates & Pickering Associates",
align = 'left') %>%
hc_exporting(enabled = TRUE) %>%
hc_add_theme(caTheme)
hchart(diamonds$price, name = "Price") %>%
hc_title(text = "Scott you can zoom on this plot!", align = 'left') %>%
hc_subtitle(text = "Sources: Cerulli Associates & Pickering Associates",
align = 'left') %>%
hc_exporting(enabled = TRUE) %>%
hc_add_theme(caTheme)
library(DT)
datatable(
iris,
extensions = 'Buttons', options = list(
dom = 'Bfrtip',
buttons =
list('copy', 'print', list(
extend = 'collection',
buttons = c('csv', 'excel', 'pdf'),
text = 'Download'
))
)
)
knitr::opts_chunk$set(echo = TRUE)
library(devtools)
# library(tidyverse)
library(lorem)
# library(dplyr)
library(quantmod)
library(DT)
library(highcharter)
source("ChartStyle.R")
data(economics_long, package = 'ggplot2')
economics_long
# sample(c(1:100), 2) %>% lipsum::lipsum[.]
# sample(c(1:100), 6) %>% lipsum::lipsums[.]
require(highcharter)
economics_long2 <- economics_long %>%
filter(variable %in% c("uempmed", "pop", "unemploy"))
economics_long
require(highcharter)
economics_long2 <- economics_long %>%
dplyr::filter(variable %in% c("uempmed", "pop", "unemploy"))
hchart(economics_long2, "line", hcaes(x = date, y = value01, group = variable)) %>%
hc_title(text = "Some Economic Data.", align = 'left') %>%
hc_subtitle(text = "Sources: Cerulli Associates & Pickering Associates",
align = 'left') %>%
hc_exporting(enabled = TRUE) %>%
hc_add_theme(caTheme)
SPY <- getSymbols("SPY", from = Sys.Date() - lubridate::years(1), auto.assign = FALSE)
SPY <- adjustOHLC(SPY)
SPY.SMA.10 <- SMA(Cl(SPY), n = 5)
SPY.SMA.200 <- SMA(Cl(SPY), n = 100)
SPY.RSI.14 <- RSI(Cl(SPY))
SPY.RSI.SellLevel <- xts(rep(70, NROW(SPY)), index(SPY))
SPY.RSI.BuyLevel <- xts(rep(30, NROW(SPY)), index(SPY))
highchart(type = "stock") %>%
# create axis :)
hc_yAxis_multiples(
create_yaxis(3, height = c(2, 1, 1), turnopposite = TRUE)
) %>%
# series :D
hc_add_series(SPY, yAxis = 0, name = "SPY") %>%
hc_add_series(SPY.SMA.10, yAxis = 0, name = "Fast MA") %>%
hc_add_series(SPY.SMA.200, yAxis = 0, name = "Slow MA") %>%
hc_add_series(SPY$SPY.Volume, color = "gray", yAxis = 1, name = "Volume", type = "column") %>%
hc_add_series(SPY.RSI.14, yAxis = 2, name = "Osciallator") %>%
hc_add_series(SPY.RSI.SellLevel,
yAxis = 2, name = "Sell level") %>%
hc_add_series(SPY.RSI.BuyLevel, yAxis = 2, name = "Buy level")%>%
hc_title(text = "Some Economic Data.", align = 'left') %>%
hc_subtitle(text = "Sources: Cerulli Associates & Pickering Associates",
align = 'left') %>%
hc_exporting(enabled = TRUE) %>%
hc_add_theme(caTheme)
library(purrr) # map function to make grouped categories argument
library(dplyr) # for select function
data(mpg, package = "ggplot2")
mpgg <- mpg %>%
filter(class %in% c("suv", "compact", "midsize")) %>%
group_by(class, manufacturer) %>%
summarize(count = n())
categories_grouped <- mpgg %>%
group_by(name = class) %>%
do(categories = .$manufacturer) %>%
list_parse()
highchart() %>%
hc_xAxis(categories = categories_grouped) %>%
hc_add_series(data = mpgg, type = "bar", hcaes(y = count, color = manufacturer),
showInLegend = FALSE)
getContent <- function(url) {
library(httr)
content(GET(url))
}
world <- getContent("https://raw.githubusercontent.com/johan/world.geo.json/master/countries.geo.json")
# is text
world <- jsonlite::fromJSON(world, simplifyVector = FALSE)
# http://cedeusdata.geosteiniger.cl/layers/geonode:mundo_corrientes_maritimas
marine <- getContent("http://cedeusdata.geosteiniger.cl/geoserver/wfs?srsName=EPSG%3A4326&typename=geonode%3Amundo_corrientes_maritimas&outputFormat=json&version=1.0.0&service=WFS&request=GetFeature")
# marine <- geojsonio::as.json(marine)
# http://cedeusdata.geosteiniger.cl/layers/geonode:mundo_limites_placas
plates <- getContent("http://cedeusdata.geosteiniger.cl/geoserver/wfs?srsName=EPSG%3A4326&typename=geonode%3Amundo_limites_placas&outputFormat=json&version=1.0.0&service=WFS&request=GetFeature")
# plates <- geojsonio::as.json(plates)
# http://cedeusdata.geosteiniger.cl/layers/geonode:mundo_volcanes
volcano <- getContent("http://cedeusdata.geosteiniger.cl/geoserver/wfs?srsName=EPSG%3A4326&typename=geonode%3Amundo_volcanes&outputFormat=json&version=1.0.0&service=WFS&request=GetFeature")
# volcano <- geojsonio::as.json(volcano)
highchart(type = "map") %>%
hc_chart(backgroundColor = "#161C20") %>%
hc_add_series(mapData = world, showInLegend = FALSE, nullColor = "#424242",
borderWidth = 0) %>%
hc_add_series(data = marine, type = "mapline", geojson = TRUE,
color = "#2980b9", name = "Marine currents",
tooltip = list(pointFormat = "{point.properties.NOMBRE}")) %>%
hc_add_series(data = plates, type = "mapline", lineWidth = 2, zIndex = -1, geojson = TRUE,
color = "#d35400", name = "Plates",
tooltip = list(pointFormat = "{point.properties.TIPO}")) %>%
hc_add_series(data = volcano, type = "mappoint", color = hex_to_rgba("#f1c40f", 0.4),
geojson = TRUE, name = "Volcanos",
tooltip = list(pointFormat = "{point.properties.NOMBRE}"),
marker = list(lineWidth = 0, radius = 2))
rmarkdown::render_site()
